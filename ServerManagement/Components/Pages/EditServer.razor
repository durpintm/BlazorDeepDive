@page "/servers/edit/{serverId:int}"

<h3>Edit Server</h3>
<br />
<br />

@if (server != null)
{
    <EditForm Model="server" FormName="FormServer" OnSubmit="Submit">
        <InputNumber hidden @bind-Value="server.ServerId" />
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.Name" class="form-control"></InputText>

            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.City" class="form-control"></InputText>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
            </div>
        </div>
        <br />
        <button class="btn btn-primary" type="submit">Update</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}

@code {
    [Parameter]
    public int serverId { get; set; }

    // [SupplyParameterFromForm(Name = "FormServer")] // For multiple forms we can use Name
    [SupplyParameterFromForm]
    private Server? server { get; set; }

    protected override void OnParametersSet()
    {
        // Invoke GetServerById only if server is null
        server ??= ServersRepository.GetServerById(this.serverId);
    }

    // async version
    // protected override Task OnParametersSetAsync()
    // {
    //     return base.OnParametersSetAsync();
    // }

    private void Submit()
    {
        if (server != null)
        {
            ServersRepository.UpdateServer(server.ServerId, server);
        }
    }
}
